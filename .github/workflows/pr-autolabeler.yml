name: Label PR Based on JIRA Issue

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  label-jira:
    name: Apply Labels
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Extract JIRA issue key from PR
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const regex = /BCP-(\d+)/g;
            const title = pr.title || '';
            const body = pr.body || '';

            const matches = [...title.matchAll(regex), ...body.matchAll(regex)];
            const issueKeys = [...new Set(matches.map(m => `BCP-${m[1]}`))];
            return issueKeys[0] || '';

      - name: Query JIRA for issue info
        id: jira
        if: steps.extract.outputs.result != ''
        run: |
          ISSUE_KEY=${{ steps.extract.outputs.result }}
          echo "Using issue key: $ISSUE_KEY"

          RESPONSE=$(curl -s -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -H "Accept: application/json" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$ISSUE_KEY")

          echo "$RESPONSE" > issue.json

          # Parse fields
          ISSUE_TYPE=$(jq -r '.fields.issuetype.name' issue.json)
          CAPITALIZATION=$(jq -r '.fields.customfield_10172 // empty' issue.json | tr '[:upper:]' '[:lower:]')

          LABEL=""
          if echo "$CAPITALIZATION" | grep -q "tech debit"; then
            LABEL="maintenance"
          elif [ "$ISSUE_TYPE" = "Bug" ]; then
            LABEL="bug"
          else
            LABEL="feature"
          fi

          echo "label=$LABEL" >> "$GITHUB_OUTPUT"

      - name: Add label to PR
        if: steps.jira.outputs.label != ''
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ steps.jira.outputs.label }}
